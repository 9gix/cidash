# Generated by Django 2.0.6 on 2018-06-24 17:12

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ci_build_id', models.CharField(max_length=64)),
                ('status', models.SmallIntegerField(blank=True, choices=[(0, 'PASSED'), (1, 'FAILED'), (2, 'SKIPPED'), (3, 'ABORTED')], null=True)),
                ('started', models.DateTimeField(help_text='Build Started Timestamp')),
                ('finished', models.DateTimeField(help_text='Build Finished Timestamp')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='First Harvest Timestamp')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Last Harvest Timestamp')),
            ],
        ),
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.CharField(help_text='Tracking Revision or Commit Hash', max_length=40)),
                ('summary', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('author', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField()),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='harvester.Branch')),
                ('merges', models.ManyToManyField(related_name='merge_into', to='harvester.Change')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='harvester.Change')),
            ],
            managers=[
                ('changeset', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('abbrev', models.CharField(max_length=5)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_code', models.CharField(max_length=32)),
                ('tracking_system', models.SmallIntegerField(choices=[(0, 'JIRA'), (1, 'TFS')])),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('scm', models.SmallIntegerField(choices=[(0, 'Git'), (1, 'Perforce'), (2, 'TFS')])),
            ],
        ),
        migrations.CreateModel(
            name='ElectricCommanderBuild',
            fields=[
                ('build_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='harvester.Build')),
                ('procedure_name', models.CharField(max_length=100)),
                ('procedure_step', models.CharField(max_length=100)),
            ],
            bases=('harvester.build',),
        ),
        migrations.CreateModel(
            name='JenkinsBuild',
            fields=[
                ('build_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='harvester.Build')),
                ('jenkins_project_name', models.CharField(max_length=100)),
            ],
            bases=('harvester.build',),
        ),
        migrations.CreateModel(
            name='PlatformBuild',
            fields=[
                ('build_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='harvester.Build')),
            ],
            bases=('harvester.build',),
        ),
        migrations.AlterUniqueTogether(
            name='repository',
            unique_together={('name', 'url', 'scm')},
        ),
        migrations.AlterUniqueTogether(
            name='issue',
            unique_together={('tracking_code', 'tracking_system')},
        ),
        migrations.AddField(
            model_name='build',
            name='integration_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='harvester.IntegrationType'),
        ),
        migrations.AddField(
            model_name='build',
            name='last_change',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='harvester.Change'),
        ),
        migrations.AddField(
            model_name='branch',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='harvester.Repository'),
        ),
        migrations.CreateModel(
            name='ElectricCommanderPlatformBuild',
            fields=[
                ('platformbuild_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='harvester.PlatformBuild')),
                ('procedure_name', models.CharField(max_length=100)),
                ('procedure_step', models.CharField(max_length=100)),
            ],
            bases=('harvester.platformbuild',),
        ),
        migrations.CreateModel(
            name='JenkinsPlatformBuild',
            fields=[
                ('platformbuild_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='harvester.PlatformBuild')),
                ('jenkins_project_name', models.CharField(max_length=100)),
            ],
            bases=('harvester.platformbuild',),
        ),
        migrations.AddField(
            model_name='platformbuild',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='harvester.Platform'),
        ),
        migrations.AlterUniqueTogether(
            name='change',
            unique_together={('revision', 'branch')},
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together={('name', 'repository')},
        ),
    ]
